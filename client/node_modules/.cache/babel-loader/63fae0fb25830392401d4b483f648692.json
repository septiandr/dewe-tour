{"ast":null,"code":"var _jsxFileName = \"D:\\\\pelatihan\\\\batch 27\\\\dewe-tour\\\\client\\\\src\\\\components\\\\navbar.js\",\n    _s = $RefreshSig$();\n\nimport './navbar.css';\nimport { Modal } from 'react-bootstrap';\nimport { Dropdown } from 'react-bootstrap';\nimport React, { useState, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\nimport User from './data-user.json';\nimport { Alert } from \"react-bootstrap\";\nimport { UserContext } from \"../context/userContext\";\nimport { API, setAuthToken } from \"../config/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Navbar() {\n  _s();\n\n  const history = useHistory();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [showRegister, setShowRegister] = useState(false);\n\n  const handleCloseRegister = () => setShowRegister(false);\n\n  const handleShowRegister = () => setShowRegister(true);\n\n  const [state, dispatch] = useState(UserContext);\n  const [message, setMessage] = useState(null);\n  const [form, setform] = useState({\n    isLogin: false,\n    user: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      phone: \"\"\n    }\n  });\n\n  const handleRegister = e => {\n    setform(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      console.log(form);\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const body = JSON.stringify(form);\n      const response = await API.post(\"/\", body, config);\n\n      if (response.data.status === \"success...\") {\n        const alert = /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          className: \"py-1\",\n          children: \"Success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this);\n\n        setMessage(alert);\n      } else {\n        const alert = /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          className: \"py-1\",\n          children: \"Failed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this);\n\n        setMessage(alert);\n      }\n    } catch (error) {\n      const alert = /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        className: \"py-1\",\n        children: \"Failed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this);\n\n      setMessage(alert);\n      console.log(error);\n    }\n  };\n\n  const [login, setLogin] = useState({\n    isLogin: false,\n    user: {\n      email: \"\",\n      password: \"\"\n    }\n  });\n\n  const handleLogin = e => {\n    setLogin(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  console.log(login.email);\n\n  const handleSubmitLogin = async e => {\n    try {\n      e.preventDefault();\n\n      if (login.email == User[1].email) {\n        sessionStorage.setItem(\"isLogin\", JSON.stringify(true));\n        sessionStorage.setItem(\"Admin\", JSON.stringify(true));\n      } else if (login.email == User[0].email) {\n        sessionStorage.setItem(\"isLogin\", JSON.stringify(true));\n      } else {\n        sessionStorage.setItem(\"isLogin\", JSON.stringify(false));\n        sessionStorage.setItem(\"Admin\", JSON.stringify(false));\n      } // Create Configuration Content-type here ...\n      // Content-type: application/json\n\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }; // Convert form data to string here ...\n\n      const body = JSON.stringify(form); // Insert data user for login process ...\n\n      const response = await API.post(\"/\", body, config);\n      setAuthToken(response.data.data.token); // Checking process\n\n      if ((response === null || response === void 0 ? void 0 : response.status) === 200) {\n        // Send data to useContext\n        dispatch({\n          type: \"LOGIN_SUCCESS\",\n          payload: response.data.data\n        }); // Status check\n\n        if (response.data.data.status === \"admin\") {\n          history.push(\"/complain-admin\");\n        } else {\n          history.push(\"/\");\n        }\n\n        const alert = /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          className: \"py-1\",\n          children: \"Login success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this);\n\n        setMessage(alert);\n      }\n    } catch (error) {\n      const alert = /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        className: \"py-1\",\n        children: \"Login failed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this);\n\n      setMessage(alert);\n      console.log(error);\n    }\n  };\n\n  const admin = JSON.parse(sessionStorage.getItem(\"Admin\"));\n  const isLogin = JSON.parse(sessionStorage.getItem(\"isLogin\"));\n\n  if (admin == false && isLogin == true) {\n    return /*#__PURE__*/_jsxDEV(NavbarLogin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"nav-right\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"./assets/Icon.png\").default,\n        alt: \"Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"nav-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"login\",\n        onClick: handleShow,\n        children: \" Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"register\",\n        onClick: handleShowRegister,\n        children: \" Register \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Navbar, \"DgxKz7y4QKgauzXGciYBoOshPG0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["D:/pelatihan/batch 27/dewe-tour/client/src/components/navbar.js"],"names":["Modal","Dropdown","React","useState","useContext","Link","useHistory","Redirect","User","Alert","UserContext","API","setAuthToken","Navbar","history","show","setShow","handleClose","handleShow","showRegister","setShowRegister","handleCloseRegister","handleShowRegister","state","dispatch","message","setMessage","form","setform","isLogin","user","name","email","password","phone","handleRegister","e","prevState","target","value","handleSubmit","preventDefault","console","log","config","headers","body","JSON","stringify","response","post","data","status","alert","error","login","setLogin","handleLogin","handleSubmitLogin","sessionStorage","setItem","token","type","payload","push","admin","parse","getItem","require","default"],"mappings":"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","sourcesContent":["\r\nimport './navbar.css'\r\nimport  { Modal }  from  'react-bootstrap' ;\r\nimport  {Dropdown}  from  'react-bootstrap' ;\r\nimport React, { useState,useContext } from 'react';\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport User from './data-user.json'\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { UserContext } from \"../context/userContext\";\r\nimport { API, setAuthToken } from \"../config/api\";\r\n\r\n\r\nfunction Navbar() {\r\n    const history = useHistory();\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [showRegister, setShowRegister] = useState(false);\r\n    const handleCloseRegister = () => setShowRegister(false);\r\n    const handleShowRegister = () => setShowRegister(true);\r\n\r\n    const [state, dispatch] = useState(UserContext);\r\n    \r\n  const [message, setMessage] = useState(null);\r\n\r\n    const [form, setform] = useState({\r\n      isLogin:false,user:{\r\n        name:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        phone:\"\",\r\n      }}\r\n    )\r\n    const handleRegister =(e) =>{\r\n      setform((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]:e.target.value,\r\n      }))\r\n    }\r\n    \r\n    const handleSubmit =async (e)=>{\r\n      try{\r\n      e.preventDefault();\r\n      console.log(form)\r\n      const config={\r\n        headers:{\r\n          \"Content-Type\":\"application/json\"\r\n        }\r\n      }\r\n      const body = JSON.stringify(form)\r\n      const response = await API.post(\"/\",body,config)\r\n      if (response.data.status === \"success...\") {\r\n        const alert = (\r\n          <Alert variant=\"success\" className=\"py-1\">\r\n            Success\r\n          </Alert>\r\n        );\r\n        setMessage(alert);\r\n      } else {\r\n        const alert = (\r\n          <Alert variant=\"danger\" className=\"py-1\">\r\n            Failed\r\n          </Alert>\r\n        );\r\n        setMessage(alert);\r\n      }\r\n    } catch (error) {\r\n      const alert = (\r\n        <Alert variant=\"danger\" className=\"py-1\">\r\n          Failed\r\n        </Alert>\r\n      );\r\n      setMessage(alert);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n    const [login, setLogin] = useState({\r\n      isLogin:false,user:{\r\n        email:\"\",\r\n        password:\"\",\r\n      }\r\n    }\r\n    )\r\n    const handleLogin =(e) =>{\r\n      setLogin((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]:e.target.value,\r\n      }))\r\n    }\r\n    \r\n   console.log(login.email)\r\n    const handleSubmitLogin =async (e)=>{\r\n      try {\r\n      e.preventDefault();\r\n      if(login.email == User[1].email){\r\n        sessionStorage.setItem(\"isLogin\", JSON.stringify(true));\r\n        sessionStorage.setItem(\"Admin\", JSON.stringify(true));\r\n      }else if(login.email == User[0].email){\r\n        sessionStorage.setItem(\"isLogin\", JSON.stringify(true));\r\n      }\r\n      else{\r\n        sessionStorage.setItem(\"isLogin\", JSON.stringify(false));\r\n        sessionStorage.setItem(\"Admin\", JSON.stringify(false));\r\n      }\r\n   \r\n  \r\n        // Create Configuration Content-type here ...\r\n        // Content-type: application/json\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        };\r\n  \r\n        // Convert form data to string here ...\r\n        const body = JSON.stringify(form);\r\n  \r\n        // Insert data user for login process ...\r\n        const response = await API.post(\"/\", body, config);\r\n        setAuthToken(response.data.data.token);\r\n        // Checking process\r\n        if (response?.status === 200) {\r\n          // Send data to useContext\r\n          dispatch({\r\n            type: \"LOGIN_SUCCESS\",\r\n            payload: response.data.data,\r\n          });\r\n  \r\n          // Status check\r\n          if (response.data.data.status === \"admin\") {\r\n            history.push(\"/complain-admin\");\r\n          } else {\r\n            history.push(\"/\");\r\n          }\r\n  \r\n          const alert = (\r\n            <Alert variant=\"success\" className=\"py-1\">\r\n              Login success\r\n            </Alert>\r\n          );\r\n          setMessage(alert);\r\n        }\r\n      } catch (error) {\r\n        const alert = (\r\n          <Alert variant=\"danger\" className=\"py-1\">\r\n            Login failed\r\n          </Alert>\r\n        );\r\n        setMessage(alert);\r\n        console.log(error);\r\n      }\r\n    }\r\n    const admin= JSON.parse(sessionStorage.getItem(\"Admin\"));\r\n    const isLogin= JSON.parse(sessionStorage.getItem(\"isLogin\"));\r\n    if(admin==false && isLogin==true){\r\n      return(<NavbarLogin/>)\r\n    }\r\n \r\n  \r\n    return ( \r\n        <div class = \"navbar\" >\r\n        <div id = \"nav-right\" >\r\n        <img src = { require(\"./assets/Icon.png\").default } alt = \"Icon\" />\r\n        </div> \r\n        <div id = \"nav-left\" > \r\n        <button id = \"login\" onClick={handleShow}> Login </button> \r\n        <button id = \"register\" onClick= {handleShowRegister}> Register </button>  \r\n        </div >\r\n\r\n      \r\n    \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Navbar"]},"metadata":{},"sourceType":"module"}